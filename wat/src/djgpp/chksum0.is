# 1 "chksum0.S"
 




















# 1 "register.h" 1
 















 

























 


















  
    
# 1 "C:/djgpp_v2/include/machine/asm.h" 1 3
 
 
































































# 63 "register.h" 2

     
    
  





# 165 "register.h"




# 22 "chksum0.S" 2


 

.text







to_cksum_last_word:
  jmp cksum_last_word

to_cksum_done:
  jmp cksum_done

to_cksum_dword_loop_done:
  jmp cksum_dword_loop_done

 


.text; .align 2; .globl  __w32_in_checksum_fast    ;  __w32_in_checksum_fast    : ;   
.text; .align 2; .globl  __w32_in_chksum_fast    ;  __w32_in_chksum_fast    : ;           

  pushl %ebx                        
  pushl %esi                        

  movl  16 (%esp), %ecx         
  sub   %eax, %eax                  
  test  %ecx, %ecx                  
  jz    to_cksum_done               

 



  movl  12 (%esp), %esi         
  subl  %edx, %edx                  
  testl $1, %esi                    
  jz    cksum_word_aligned          
  movb  (%esi), %ah                 

  incl  %esi                        
  decl  %ecx                        
  jz    to_cksum_done               

 




cksum_word_aligned:
  shrl $1, %ecx                     
  jnc  cksum_start                  
  movb (%esi, %ecx, 2), %al         
  jz   to_cksum_done                

 





 




cksum_start:
  testl $2, %esi                    
  jz    cksum_dword_aligned         
  movw  (%esi), %dx                 
  addl  $2, %esi                    
  addl  %edx, %eax                  


  decl  %ecx                        


 



cksum_dword_aligned:
  pushl %ecx                        

  shrl  $1, %ecx                    
  jz    to_cksum_last_word          

  movl  (%esi), %edx                
  addl  $4, %esi                    
  decl  %ecx                        
  jz    to_cksum_dword_loop_done
                                    
  movl  %ecx, %ebx                  
  addl  $((1 << 5 ) -1), %ecx      
  shrl  $(5 ), %ecx   

  andl  $((1 << 5 ) -1), %ebx      



  jz    cksum_dword_loop            






  leal -4* (1 << 5 ) (%esi, %ebx, 4), %esi
                                    





  shll $2, %ebx          

  jmp  *loop_entries (%ebx)         





cksum_dword_loop:






  loop_entry_0 : adc %edx, %eax; mov  0 (%esi), %edx 
  loop_entry_4 : adc %edx, %eax; mov  4 (%esi), %edx 
  loop_entry_8 : adc %edx, %eax; mov  8 (%esi), %edx 
  loop_entry_12 : adc %edx, %eax; mov  12 (%esi), %edx 
  loop_entry_16 : adc %edx, %eax; mov  16 (%esi), %edx 
  loop_entry_20 : adc %edx, %eax; mov  20 (%esi), %edx 
  loop_entry_24 : adc %edx, %eax; mov  24 (%esi), %edx 
  loop_entry_28 : adc %edx, %eax; mov  28 (%esi), %edx 
  loop_entry_32 : adc %edx, %eax; mov  32 (%esi), %edx 
  loop_entry_36 : adc %edx, %eax; mov  36 (%esi), %edx 
  loop_entry_40 : adc %edx, %eax; mov  40 (%esi), %edx 
  loop_entry_44 : adc %edx, %eax; mov  44 (%esi), %edx 
  loop_entry_48 : adc %edx, %eax; mov  48 (%esi), %edx 
  loop_entry_52 : adc %edx, %eax; mov  52 (%esi), %edx 
  loop_entry_56 : adc %edx, %eax; mov  56 (%esi), %edx 
  loop_entry_60 : adc %edx, %eax; mov  60 (%esi), %edx 
  loop_entry_64 : adc %edx, %eax; mov  64 (%esi), %edx 
  loop_entry_68 : adc %edx, %eax; mov  68 (%esi), %edx 
  loop_entry_72 : adc %edx, %eax; mov  72 (%esi), %edx 
  loop_entry_76 : adc %edx, %eax; mov  76 (%esi), %edx 
  loop_entry_80 : adc %edx, %eax; mov  80 (%esi), %edx 
  loop_entry_84 : adc %edx, %eax; mov  84 (%esi), %edx 
  loop_entry_88 : adc %edx, %eax; mov  88 (%esi), %edx 
  loop_entry_92 : adc %edx, %eax; mov  92 (%esi), %edx 
  loop_entry_96 : adc %edx, %eax; mov  96 (%esi), %edx 
  loop_entry_100 : adc %edx, %eax; mov  100 (%esi), %edx 
  loop_entry_104 : adc %edx, %eax; mov  104 (%esi), %edx 
  loop_entry_108 : adc %edx, %eax; mov  108 (%esi), %edx 
  loop_entry_112 : adc %edx, %eax; mov  112 (%esi), %edx 
  loop_entry_116 : adc %edx, %eax; mov  116 (%esi), %edx 
  loop_entry_120 : adc %edx, %eax; mov  120 (%esi), %edx 
  loop_entry_124 : adc %edx, %eax; mov  124 (%esi), %edx     


cksum_dword_loop_end:
  leal 4* (1 << 5 ) (%esi), %esi   
  decl %ecx                         
  jnz  cksum_dword_loop             

cksum_dword_loop_done:
  adcl  %edx, %eax                  
  movl  $0, %edx                    
  adcl  %edx, %eax

 





cksum_last_word:
  popl  %ecx                        
  testl $1, %ecx                    
  jz    cksum_done                  
  addw  (%esi), %ax                 
  adcl  $0, %eax

cksum_done:
  movl  %eax, %ecx                  
  rorl  $16, %ecx
  addl  %ecx, %eax
  movl  12 (%esp), %ebx
  shrl  $16, %eax
  testl $1, %ebx                    
  jz    cksum_combine               
  rorw  $8, %ax                     

cksum_combine:
  popl %esi
  adcl $0, %eax
  popl %ebx
  ret


.data
.align 2

loop_entries:
  .long  0
  .long  loop_entry_124
  .long  loop_entry_120
  .long  loop_entry_116
  .long  loop_entry_112
  .long  loop_entry_108
  .long  loop_entry_104
  .long  loop_entry_100
  .long  loop_entry_96
  .long  loop_entry_92
  .long  loop_entry_88
  .long  loop_entry_84
  .long  loop_entry_80
  .long  loop_entry_76
  .long  loop_entry_72
  .long  loop_entry_68
  .long  loop_entry_64
  .long  loop_entry_60
  .long  loop_entry_56
  .long  loop_entry_52
  .long  loop_entry_48
  .long  loop_entry_44
  .long  loop_entry_40
  .long  loop_entry_36
  .long  loop_entry_32
  .long  loop_entry_28
  .long  loop_entry_24
  .long  loop_entry_20
  .long  loop_entry_16
  .long  loop_entry_12
  .long  loop_entry_8
  .long  loop_entry_4

